# coding: utf-8

"""
    API для Навыка

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class TaskRequestTaskInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'deal_members_number': 'DealMembersNumber',
        'client': 'Client',
        'organization': 'Organization',
        'estate_objects': 'list[EstateObject]'
    }

    attribute_map = {
        'deal_members_number': 'dealMembersNumber',
        'client': 'client',
        'organization': 'organization',
        'estate_objects': 'estateObjects'
    }

    def __init__(self, deal_members_number=None, client=None, organization=None, estate_objects=None):  # noqa: E501
        """TaskRequestTaskInfo - a model defined in Swagger"""  # noqa: E501
        self._deal_members_number = None
        self._client = None
        self._organization = None
        self._estate_objects = None
        self.discriminator = None
        if deal_members_number is not None:
            self.deal_members_number = deal_members_number
        if client is not None:
            self.client = client
        if organization is not None:
            self.organization = organization
        if estate_objects is not None:
            self.estate_objects = estate_objects

    @property
    def deal_members_number(self):
        """Gets the deal_members_number of this TaskRequestTaskInfo.  # noqa: E501


        :return: The deal_members_number of this TaskRequestTaskInfo.  # noqa: E501
        :rtype: DealMembersNumber
        """
        return self._deal_members_number

    @deal_members_number.setter
    def deal_members_number(self, deal_members_number):
        """Sets the deal_members_number of this TaskRequestTaskInfo.


        :param deal_members_number: The deal_members_number of this TaskRequestTaskInfo.  # noqa: E501
        :type: DealMembersNumber
        """

        self._deal_members_number = deal_members_number

    @property
    def client(self):
        """Gets the client of this TaskRequestTaskInfo.  # noqa: E501


        :return: The client of this TaskRequestTaskInfo.  # noqa: E501
        :rtype: Client
        """
        return self._client

    @client.setter
    def client(self, client):
        """Sets the client of this TaskRequestTaskInfo.


        :param client: The client of this TaskRequestTaskInfo.  # noqa: E501
        :type: Client
        """

        self._client = client

    @property
    def organization(self):
        """Gets the organization of this TaskRequestTaskInfo.  # noqa: E501


        :return: The organization of this TaskRequestTaskInfo.  # noqa: E501
        :rtype: Organization
        """
        return self._organization

    @organization.setter
    def organization(self, organization):
        """Sets the organization of this TaskRequestTaskInfo.


        :param organization: The organization of this TaskRequestTaskInfo.  # noqa: E501
        :type: Organization
        """

        self._organization = organization

    @property
    def estate_objects(self):
        """Gets the estate_objects of this TaskRequestTaskInfo.  # noqa: E501

        Объекты недвижимости  # noqa: E501

        :return: The estate_objects of this TaskRequestTaskInfo.  # noqa: E501
        :rtype: list[EstateObject]
        """
        return self._estate_objects

    @estate_objects.setter
    def estate_objects(self, estate_objects):
        """Sets the estate_objects of this TaskRequestTaskInfo.

        Объекты недвижимости  # noqa: E501

        :param estate_objects: The estate_objects of this TaskRequestTaskInfo.  # noqa: E501
        :type: list[EstateObject]
        """

        self._estate_objects = estate_objects

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(TaskRequestTaskInfo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TaskRequestTaskInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
