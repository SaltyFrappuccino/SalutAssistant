# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TaskInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, create_date: datetime=None, external_id: str=None, type_full: str=None, current_status: str=None):  # noqa: E501
        """TaskInfo - a model defined in Swagger

        :param create_date: The create_date of this TaskInfo.  # noqa: E501
        :type create_date: datetime
        :param external_id: The external_id of this TaskInfo.  # noqa: E501
        :type external_id: str
        :param type_full: The type_full of this TaskInfo.  # noqa: E501
        :type type_full: str
        :param current_status: The current_status of this TaskInfo.  # noqa: E501
        :type current_status: str
        """
        self.swagger_types = {
            'create_date': datetime,
            'external_id': str,
            'type_full': str,
            'current_status': str
        }

        self.attribute_map = {
            'create_date': 'createDate',
            'external_id': 'externalId',
            'type_full': 'typeFull',
            'current_status': 'currentStatus'
        }
        self._create_date = create_date
        self._external_id = external_id
        self._type_full = type_full
        self._current_status = current_status

    @classmethod
    def from_dict(cls, dikt) -> 'TaskInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The taskInfo of this TaskInfo.  # noqa: E501
        :rtype: TaskInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_date(self) -> datetime:
        """Gets the create_date of this TaskInfo.

        Дата создания заявки  # noqa: E501

        :return: The create_date of this TaskInfo.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date: datetime):
        """Sets the create_date of this TaskInfo.

        Дата создания заявки  # noqa: E501

        :param create_date: The create_date of this TaskInfo.
        :type create_date: datetime
        """
        if create_date is None:
            raise ValueError("Invalid value for `create_date`, must not be `None`")  # noqa: E501

        self._create_date = create_date

    @property
    def external_id(self) -> str:
        """Gets the external_id of this TaskInfo.

        Идентификатор заявки в источнике заявки (Номер КД)  # noqa: E501

        :return: The external_id of this TaskInfo.
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id: str):
        """Sets the external_id of this TaskInfo.

        Идентификатор заявки в источнике заявки (Номер КД)  # noqa: E501

        :param external_id: The external_id of this TaskInfo.
        :type external_id: str
        """
        if external_id is None:
            raise ValueError("Invalid value for `external_id`, must not be `None`")  # noqa: E501

        self._external_id = external_id

    @property
    def type_full(self) -> str:
        """Gets the type_full of this TaskInfo.

        Тип заявки (расшифровка)  # noqa: E501

        :return: The type_full of this TaskInfo.
        :rtype: str
        """
        return self._type_full

    @type_full.setter
    def type_full(self, type_full: str):
        """Sets the type_full of this TaskInfo.

        Тип заявки (расшифровка)  # noqa: E501

        :param type_full: The type_full of this TaskInfo.
        :type type_full: str
        """
        if type_full is None:
            raise ValueError("Invalid value for `type_full`, must not be `None`")  # noqa: E501

        self._type_full = type_full

    @property
    def current_status(self) -> str:
        """Gets the current_status of this TaskInfo.

        Текущий статус заявки  # noqa: E501

        :return: The current_status of this TaskInfo.
        :rtype: str
        """
        return self._current_status

    @current_status.setter
    def current_status(self, current_status: str):
        """Sets the current_status of this TaskInfo.

        Текущий статус заявки  # noqa: E501

        :param current_status: The current_status of this TaskInfo.
        :type current_status: str
        """
        if current_status is None:
            raise ValueError("Invalid value for `current_status`, must not be `None`")  # noqa: E501

        self._current_status = current_status
