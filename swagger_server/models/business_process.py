# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class BusinessProcess(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, type: str=None, category: str=None):  # noqa: E501
        """BusinessProcess - a model defined in Swagger

        :param type: The type of this BusinessProcess.  # noqa: E501
        :type type: str
        :param category: The category of this BusinessProcess.  # noqa: E501
        :type category: str
        """
        self.swagger_types = {
            'type': str,
            'category': str
        }

        self.attribute_map = {
            'type': 'type',
            'category': 'category'
        }
        self._type = type
        self._category = category

    @classmethod
    def from_dict(cls, dikt) -> 'BusinessProcess':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The businessProcess of this BusinessProcess.  # noqa: E501
        :rtype: BusinessProcess
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """Gets the type of this BusinessProcess.

        Тип запроса  # noqa: E501

        :return: The type of this BusinessProcess.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this BusinessProcess.

        Тип запроса  # noqa: E501

        :param type: The type of this BusinessProcess.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def category(self) -> str:
        """Gets the category of this BusinessProcess.

        Категория запроса  # noqa: E501

        :return: The category of this BusinessProcess.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category: str):
        """Sets the category of this BusinessProcess.

        Категория запроса  # noqa: E501

        :param category: The category of this BusinessProcess.
        :type category: str
        """
        if category is None:
            raise ValueError("Invalid value for `category`, must not be `None`")  # noqa: E501

        self._category = category
